importing:
    >>> geometry = __import__('7-base_geometry').BaseGeometry

Correct class:
    >>> print(dir(geometry))
    ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'area', 'integer_validator']

area:
    >>> test = geometry()
    >>> test.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

area called as class:
    >>> geometry.area()
    Traceback (most recent call last):
        ...
    TypeError: area() missing 1 required positional argument: 'self'

area with args:
    >>> test = geometry()
    >>> test.area(1)
    Traceback (most recent call last):
        ...
    TypeError: area() takes 1 positional argument but 2 were given

integer_validator called via class:
    >>> geometry.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 3 required positional arguments: 'self', 'name', and 'value'

integer_validator arg test 0:
    >>> test = geometry()
    >>> test.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

integer_validator arg test 2:
    >>> test = geometry()
    >>> test.integer_validator("name", 10)

integer_validator arg test float:
    >>> test = geometry()
    >>> test.integer_validator("name", 1.0)
    Traceback (most recent call last):
        ...
    TypeError: name must be an integer

integer_validator arg test string:
    >>> test = geometry()
    >>> test.integer_validator("name", "1")
    Traceback (most recent call last):
        ...
    TypeError: name must be an integer

integer_validator arg test bool:
    >>> test = geometry()
    >>> test.integer_validator("name", True)
    Traceback (most recent call last):
        ...
    TypeError: name must be an integer

integer_validator arg test list:
    >>> test = geometry()
    >>> one = ["1"]
    >>> test.integer_validator("name", one)
    Traceback (most recent call last):
        ...
    TypeError: name must be an integer

integer_validator arg test None:
    >>> test = geometry()
    >>> test.integer_validator("name", None)
    Traceback (most recent call last):
        ...
    TypeError: name must be an integer
